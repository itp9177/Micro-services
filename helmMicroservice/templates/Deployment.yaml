apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: spring-commerce
  name: accounting-service
  labels:
    app: accounting-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accounting-service
  template:
    metadata:
      name: accounting-service
      labels:
        app: accounting-service
    spec:
      containers:
        - name: myaccounting
          image: {{ .Values.accounting.image }}: {{ .Values.accounting.imageTag}}
          ports:
            - containerPort: 8080
              name: indu
          imagePullPolicy: IfNotPresent
      restartPolicy: Always


---

apiVersion: v1
kind: Service
metadata:
  name: mysvr
  namespace: spring-commerce
  labels:
    app: accounting-service
spec:
  selector:
    app: accounting-service
  type: LoadBalancer
  ports:
    - port: 8085
      targetPort: 8080
      name: indu
    - port: 8082
      targetPort: 8082
      name: indu2


---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: spring-commerce
  name: order-service
  labels:
    app:  order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accounting-service
  template:
    metadata:
      name: order-service
      labels:
        app: accounting-service
    spec:
      containers:
        - name: ordercontainer
          image: localhost:5000/order-management-service:latest1 {{.Values.ingress.hosts]}}
          env:
             - name: SPRING_SERVER_PORT
               value: '8082'
             - name: SPRING_PROFILES_ACTIVE
               value: prod
          ports:
            - containerPort: 8082
              name: indu2
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
